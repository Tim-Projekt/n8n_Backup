{
  "active": false,
  "connections": {
    "Simulation_API1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Code12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CUBA (Current-Based Adaptive Hodgkin-Huxley)": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code12": {
      "main": [
        [
          {
            "node": "Simulation_API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Input Trigger": {
      "main": [
        [
          {
            "node": "CUBA (Current-Based Adaptive Hodgkin-Huxley)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "CUBA (Current-Based Adaptive Hodgkin-Huxley)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-24T16:05:09.906Z",
  "id": "OYZvqgAgg0d7CILa",
  "meta": null,
  "name": "CUBA - NeuroPilot",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.API_URL}}/simulate_cuba",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "taum",
              "value": "={{ $('Code1').item.json.taum }}"
            },
            {
              "name": "taue",
              "value": "={{ $('Code1').item.json.taue }}"
            },
            {
              "name": "taui",
              "value": "={{ $('Code1').item.json.taui }}"
            },
            {
              "name": "Vt",
              "value": "={{ $('Code1').item.json.Vt }}"
            },
            {
              "name": "Vr",
              "value": "={{ $('Code1').item.json.Vr }}"
            },
            {
              "name": "El",
              "value": "={{ $('Code1').item.json.El }}"
            },
            {
              "name": "we",
              "value": "={{ $('Code12').item.json.we }}"
            },
            {
              "name": "wi",
              "value": "={{ $('Code12').item.json.wi }}"
            }
          ]
        },
        "options": {
          "response": {}
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -600,
        180
      ],
      "id": "972266f3-8c56-480f-b007-c081a528dc55",
      "name": "Simulation_API1"
    },
    {
      "parameters": {
        "jsCode": "// Original-Response aus dem Input-Node\nconst response = $input.first().json.text;\n\n// Validierung: Sicherstellen, dass response ein String ist\nif (typeof response !== 'string') {\n  throw new Error(\"Response ist nicht definiert oder kein String.\");\n}\n\n// Regex zur Extraktion der neuen Parameter und Werte ohne \"* mV\" oder \"* ms\"\nconst regexParams = /taum:\\s*([\\d.]+)\\s*(?=\\s*\\n*)|taue:\\s*([\\d.]+)\\s*(?=\\s*\\n*)|taui:\\s*([\\d.]+)\\s*(?=\\s*\\n*)|Vt:\\s*([\\d.-]+)\\s*(?=\\s*\\n*)|Vr:\\s*([\\d.-]+)\\s*(?=\\s*\\n*)|El:\\s*([\\d.-]+)\\s*(?=\\s*\\n*)|we:\\s*([^\\n]+)\\s*(?=\\s*\\n*)|wi:\\s*([^\\n]+)\\s*(?=\\s*\\n*)/g;\n\n// Alle Übereinstimmungen für Parameter finden\nconst matchesParams = [...response.matchAll(regexParams)];\n\n// Initialisiere ein Objekt zur Speicherung der Parameter\nconst parameters = {};\n\n// Parameterwerte aus Matches extrahieren\nmatchesParams.forEach(match => {\n  if (match[1]) parameters.taum = parseFloat(match[1]);\n  if (match[2]) parameters.taue = parseFloat(match[2]);\n  if (match[3]) parameters.taui = parseFloat(match[3]);\n  if (match[4]) parameters.Vt = parseFloat(match[4]);\n  if (match[5]) parameters.Vr = parseFloat(match[5]);\n  if (match[6]) parameters.El = parseFloat(match[6]);\n  if (match[7]) parameters.we = match[7].trim();\n  if (match[8]) parameters.wi = match[8].trim();\n});\n\n// Rückgabe des Parameters-Objekts\nreturn {\n  json: parameters\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1080,
        180
      ],
      "id": "4b33c398-5cac-48f8-97a3-437e67019ed1",
      "name": "Code1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Dies ist das zu simulierende Szenario:\n{{ $json.Szenario }}\n\nVermeide jegliche Sonderzeichen oder Kommentare. Nur der Output!",
        "messages": {
          "messageValues": [
            {
              "message": "=Du bist ein führender Neurowissenschaftler mit fundierter Expertise in der Arbeit mit Simulationssoftware. Deine Aufgabe besteht darin, präzise Simulationsparameter zu bestimmen, die optimal auf ein vorgegebenes Szenario abgestimmt sind.\n\nDein Ziel:\nKonfiguriere die Simulation so, dass sie das Szenario möglichst genau widerspiegelt, robuste wissenschaftliche Erkenntnisse liefert und optimal auf relevante Fragestellungen eingeht.\n\nDein Arbeitsansatz:\n\nAnalysiere das Szenario sorgfältig, um relevante Variablen, Bedingungen und Zielgrößen zu identifizieren, die durch die Simulation abgebildet werden sollen.\nBestimme präzise, wie die Simulationsparameter konfiguriert werden müssen, um eine hohe Genauigkeit und Relevanz für das vorgegebene Szenario zu erreichen.\nFühre die Optimierung so aus, dass Ergebnisse eine maximale Übertragbarkeit auf reale oder hypothetische Situationen garantieren.\nDokumentiere ausschließlich die optimierten Simulationsparameter, um einen direkten Einsatz in der Simulation zu ermöglichen.\nWichtige Anforderungen:\n\nDie Analyse und die Auswahl der Parameter müssen vollständig objektiv, wissenschaftlich fundiert und direkt anwendbar sein.\nDer Output ist strikt auf die relevanten Simulationsparameter zu beschränken.\nVerzichte auf jegliche Einleitung, Erklärungen oder abschließende Kommentare.\n\nSimulationsparameter:\nParameter: taum\nBeschreibung: Membranzeitkonstante, beschreibt die Geschwindigkeit der Änderung des Membranpotenzials\nWertebereich: [Min: 10, Typisch: 20, Max: 30]\nEinheit: ms\n\nParameter: taue\nBeschreibung: Zeitkonstante für den exzitatorischen Input, bestimmt die Dynamik des exzitatorischen Effekts\nWertebereich: [Min: 3, Typisch: 5, Max: 10]\nEinheit: ms\n\nParameter: taui\nBeschreibung: Zeitkonstante für den inhibitorischen Input, bestimmt die Dynamik des inhibitorischen Effekts\nWertebereich: [Min: 5, Typisch: 10, Max: 20]\nEinheit: ms\n\nParameter: Vt\nBeschreibung: Schwellenpotenzial, ab dem ein Neuron feuert\nWertebereich: [Min: -55, Typisch: -50, Max: -45]\nEinheit: mV\n\nParameter: Vr\nBeschreibung: Rücksetzpotenzial, auf das das Membranpotenzial nach einem Spike zurückgesetzt wird\nWertebereich: [Min: -70, Typisch: -60, Max: -50]\nEinheit: mV\n\nParameter: El\nBeschreibung: Ruhemembranpotenzial, das elektrische Potential im Ruhezustand\nWertebereich: [Min: -55, Typisch: -49, Max: -45]\nEinheit: mV\n\nParameter: we\nBeschreibung: Exzitatorisches synaptisches Gewicht (berechnet als 60·0.27/10); beeinflusst die Stärke des exzitatorischen Inputs\nWertebereich: [Min: 1, Typisch: 1.62, Max: 2.5]\nEinheit: mV\n\nParameter: wi\nBeschreibung: Inhibitorisches synaptisches Gewicht (berechnet als –20·4.5/10); beeinflusst die Stärke des inhibitorischen Inputs\nWertebereich: [Min: -15, Typisch: -9, Max: -5]\nEinheit: mV\n\nBeispieloutput:\ntaum: [Zahl im Bereich 10–30]  \ntaue: [Zahl im Bereich 3–10]  \ntaui: [Zahl im Bereich 5–20]  \nVt: [Zahl im Bereich -55 bis -45]  \nVr: [Zahl im Bereich -70 bis -50]  \nEl: [Zahl im Bereich -55 bis -45]  \nwe: [Zahl im Bereich 1–2.5]  \nwi: [Zahl im Bereich -15 bis -5]"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -1520,
        180
      ],
      "id": "3f9e49dc-7869-487c-af74-e0555dcf7c31",
      "name": "CUBA (Current-Based Adaptive Hodgkin-Huxley)"
    },
    {
      "parameters": {
        "jsCode": "const we = $input.first().json.we;  // String mit mathematischem Ausdruck\nconst wi = $input.first().json.wi;  // String mit mathematischem Ausdruck\n\nfunction evaluateExpression(expression) {\n    try {\n        return eval(expression);  // Berechnet den Ausdruck\n    } catch (error) {\n        throw new Error(`Fehler beim Berechnen des Ausdrucks: ${expression}`);\n    }\n}\n\n// Berechnung der Werte\nconst weValue = evaluateExpression(we);\nconst wiValue = evaluateExpression(wi);\n\n// Beide Werte als ein Item zurückgeben\nreturn [\n    { json: { we: weValue, wi: wiValue } }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -820,
        180
      ],
      "id": "e60faa0e-a408-4965-b624-82b0f5f602ba",
      "name": "Code12"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "Szenario"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1860,
        180
      ],
      "id": "9d866693-8da9-4bdf-bb29-e09b31caa62c",
      "name": "Workflow Input Trigger"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Analysiere kritisch die Übereinstimmung der aktuellen Simulation mit den Referenzdaten des CUBA-Modells. Nutze das Verständnis der grundlegenden Prinzipien des CUBA-Modells als kontextuelle Orientierungshilfe, um die Simulationsergebnisse einzuordnen und beobachtete Abweichungen zu interpretieren.\n\nAnalytische Leitfragen\nÜbereinstimmung und Abweichung (Primärfokus)\n\nBeschreibung (quantitativ und qualitativ):\nIn welchen Bereichen und zu welchen Zeitpunkten decken sich Simulation und Referenzdaten?\nWo und in welchem Ausmaß weichen die Simulationsergebnisse von den Referenzdaten ab?\nMuster:\nGibt es systematische Abweichungsmuster (z.B. zeitliche Verschiebungen, Unterschiede in der Spike-Häufigkeit)?\nStabilität:\nWie stabil ist die Übereinstimmung/Abweichung über die Zeit?\nPositionsabhängigkeit:\nGibt es Unterschiede in der Übereinstimmung/Abweichung zwischen verschiedenen Neuronen (unterschiedliche y-Werte)?\nMechanistische Hypothesen\n\nWelche Aspekte des CUBA-Modells könnten die beobachteten Abweichungen erklären?\nBeispiel: „Die beobachteten Unterschiede in der Spike-Rate könnten auf Ungenauigkeiten in der Modellierung der synaptischen Kopplung oder der Netzwerkkonnektivität hinweisen.“\nBeziehe Simulationsparameter ein (z.B. „Die beobachteten zeitlichen Verschiebungen könnten durch die gewählte numerische Integrationsmethode oder die Konfiguration der synaptischen Gewichte bedingt sein.“)\nModellbewertung\n\nStärken: Welche Aspekte der Simulation stimmen gut mit den Referenzdaten und somit mit dem CUBA-Modell überein?\nBesonderheiten: Gibt es unerwartete Abweichungsmuster?\nLimitationen: Technische oder konzeptuelle Einschränkungen der Simulation, die zu den Abweichungen führen könnten?\nAnforderungen\nWissenschaftliche Präzision: Nutze Begriffe wie Aktionspotential, synaptische Kopplung, Netzwerkdynamik, numerische Integration.\nQuantitative Angaben: Gib nach Möglichkeit Amplitudenunterschiede, zeitliche Verschiebungen, relative Abweichungen oder Änderungen der Feuerraten an.\nTestbare Hypothesen: z.B. „Eine feinere Diskretisierung der Zeit in der Simulation könnte die zeitlichen Verschiebungen reduzieren.“\nStrukturvorgabe\nBeschreibung der Übereinstimmung und Abweichung zwischen Simulation und Referenzdaten\nKontextualisierung innerhalb des CUBA-Modells\nMechanistische Hypothesenbildung\nBewertung der Simulationsperformance\n\nZiel\nEine Analyse, die die Simulation des CUBA-Modells in den Mittelpunkt stellt und die Prinzipien des Modells als Orientierung nutzt, um Erkenntnisse über die Genauigkeit und Limitationen der Simulation zu gewinnen.\n\nSimuliertes Szenario\n{{ $('Workflow Input Trigger').item.json.Szenario }}\n\nSimulationsparameter\n{{ $('CUBA (Current-Based Adaptive Hodgkin-Huxley)').item.json.text }}\n\nZusätzliche Information\nDie Referenzdaten basieren auf der Simulation des CUBA-Modell bei einem ausgewogenen Netzwerk mit moderater Aktivität.\n\nLinkes Diagramm (Spike Raster Plot):\nX-Achse: Zeit (ms)\nY-Achse: Neuronenindex\nGrüne Punkte: Referenzdaten\nRote Punkte: Simulationsergebnisse\nRechtes Diagramm (Spike Heatmap nur für Simulationsergebnisse):\nX-Achse: Zeit (ms)\nY-Achse: Neuronenindex\nFarbskala: 0 (dunkel) bis 10 (hell) als Maß für die Spike-Häufigkeit bzw. -Aktivität",
        "inputType": "base64",
        "options": {
          "maxTokens": 1000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -320,
        180
      ],
      "id": "c9d7e79d-5670-4c62-94e5-63ffc31d6fc7",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "93L9c3FnEnOvHs4I",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/o3-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1520,
        500
      ],
      "id": "53034c6f-3feb-4511-b6a9-442d6e54a4cb",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "pG95LwYPd3nZ3zAb",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dd4a689f-cd05-40b2-8167-76a2c0e9b2bc",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        260,
        180
      ],
      "id": "7615bac3-ccd4-4fc0-b32d-1286e6743d01",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appw2bTn3Zt80Vgia",
          "mode": "list",
          "cachedResultName": "Pylorisches",
          "cachedResultUrl": "https://airtable.com/appw2bTn3Zt80Vgia"
        },
        "table": {
          "__rl": true,
          "value": "tbl8tlIfo2kUlK8Ck",
          "mode": "list",
          "cachedResultName": "Analyseergebnisse",
          "cachedResultUrl": "https://airtable.com/appw2bTn3Zt80Vgia/tbl8tlIfo2kUlK8Ck"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Simulationsmodell": "CUBA",
            "Szenario": "={{ $('Workflow Input Trigger').item.json.Szenario }}",
            "Simulationsparameter": "={{ $('CUBA (Current-Based Adaptive Hodgkin-Huxley)').item.json.text }}",
            "Analyseergebnisse": "={{ $('OpenAI1').item.json.content }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Simulationsmodell",
              "displayName": "Simulationsmodell",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Szenario",
              "displayName": "Szenario",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Simulationsparameter",
              "displayName": "Simulationsparameter",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Analyseergebnisse",
              "displayName": "Analyseergebnisse",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        40,
        20
      ],
      "id": "a800a32c-7d62-43a8-9416-acb427300e87",
      "name": "Airtable",
      "credentials": {
        "airtableTokenApi": {
          "id": "zt1LZGV2136revL0",
          "name": "RAD Pylorisches"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-24T21:14:18.000Z",
  "versionId": "4c0f5395-617d-46ba-946d-aaec5740ada0"
}