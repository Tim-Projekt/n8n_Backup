{
  "active": false,
  "connections": {
    "Code3": {
      "main": [
        [
          {
            "node": "Simulation_API3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simulation_API3": {
      "main": [
        [
          {
            "node": "OpenAI3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Izhikevich_2003": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Input Trigger": {
      "main": [
        [
          {
            "node": "Izhikevich_2003",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "main": [
        [
          {
            "node": "Airtable",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Izhikevich_2003",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-19T20:58:32.052Z",
  "id": "7wAxw5EYrWNv52L1",
  "meta": null,
  "name": "Izhikevich_2003_Flexibel",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Original-Response aus dem Input-Node\nconst response = $input.first().json.text;\n\n// Validierung: Sicherstellen, dass response ein String ist\nif (typeof response !== 'string') {\n  throw new Error(\"Response ist nicht definiert oder kein String.\");\n}\n\n// Regex zur Extraktion der Parameter und Werte\nconst regexParams = /\\b([a-zA-Z_]+(?:\\s*\\(.*?\\))?):\\s*([\\d.-]+)\\s*(?:\\*\\s*[a-zA-Z_()]+)?/g;\n\n// Alle Übereinstimmungen für Parameter finden\nconst matchesParams = [...response.matchAll(regexParams)];\n\n// Initialisiere ein Objekt zur Speicherung der Parameter\nconst parameters = {};\n\n// Parameterwerte aus Matches extrahieren\nmatchesParams.forEach(match => {\n  // Extrahiere den Parameter-Namen und den Wert\n  const paramName = match[1].trim();\n  const paramValue = parseFloat(match[2]);\n\n  // Speichere die Parameter im Objekt\n  parameters[paramName] = paramValue;\n});\n\n// Rückgabe des Parameters-Objekts\nreturn {\n  json: parameters\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -840,
        180
      ],
      "id": "35cac355-bee6-449c-b7b4-3b8367c42a02",
      "name": "Code3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.API_URL}}/simulate_network",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Code3').item.json }}",
        "options": {
          "response": {}
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        180
      ],
      "id": "ee67926c-2000-41b0-9ba5-149a4b8850bf",
      "name": "Simulation_API3"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Dies ist das zu simulierende Szenario:\n{{ $json.Szenario }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Du bist ein führender Neurowissenschaftler mit fundierter Expertise in der Arbeit mit Simulationssoftware. Deine Aufgabe besteht darin, präzise Simulationsparameter zu bestimmen, die optimal auf ein vorgegebenes Szenario abgestimmt sind.\n\nDein Ziel:\nKonfiguriere die Simulation so, dass sie das Szenario möglichst genau widerspiegelt, robuste wissenschaftliche Erkenntnisse liefert und optimal auf relevante Fragestellungen eingeht.\n\nDein Arbeitsansatz:\n\nAnalysiere das Szenario sorgfältig, um relevante Variablen, Bedingungen und Zielgrößen zu identifizieren, die durch die Simulation abgebildet werden sollen.\nBestimme präzise, wie die Simulationsparameter konfiguriert werden müssen, um eine hohe Genauigkeit und Relevanz für das vorgegebene Szenario zu erreichen.\nFühre die Optimierung so aus, dass Ergebnisse eine maximale Übertragbarkeit auf reale oder hypothetische Situationen garantieren.\nDokumentiere ausschließlich die optimierten Simulationsparameter, um einen direkten Einsatz in der Simulation zu ermöglichen.\nWichtige Anforderungen:\n\nDie Analyse und die Auswahl der Parameter müssen vollständig objektiv, wissenschaftlich fundiert und direkt anwendbar sein.\nDer Output ist strikt auf die relevanten Simulationsparameter zu beschränken.\nVerzichte auf jegliche Einleitung, Erklärungen oder abschließende Kommentare.\n\nSimulationsparameter:\nParameter: dt\nBeschreibung: Zeitschritt der numerischen Integration. Werte zwischen 0.1 ms und 1 ms sind typisch für eine stabile und genaue Simulation.\nWertebereich: [Min: 0.1, Typisch: 1, Max: 1]\nEinheit: ms\n\nParameter: Ne\nBeschreibung: Anzahl exzitatorischer Neuronen im Netzwerk. Typischerweise 80 % der Gesamtanzahl.\nWertebereich: [Min: 800, Typisch: 800, Max: 800]\nEinheit: –\n\nParameter: Ni\nBeschreibung: Anzahl inhibitorischer Neuronen im Netzwerk. Typischerweise 20 % der Gesamtanzahl.\nWertebereich: [Min: 200, Typisch: 200, Max: 200]\nEinheit: –\n\nParameter: a_exc\nBeschreibung: Zeitskalierungsparameter für exzitatorische Neuronen. Standardwert für regulär feuernde Neuronen nach Izhikevich (2003).\nWertebereich: [Min: 0.02, Typisch: 0.02, Max: 0.02]\nEinheit: –\n\nParameter: b_exc\nBeschreibung: Erholungsparameter für exzitatorische Neuronen. Beeinflusst die Nachhyperpolarisationsphase.\nWertebereich: [Min: 0.2, Typisch: 0.2, Max: 0.2]\nEinheit: –\n\nParameter: c_exc  \nBeschreibung: Reset-Wert für das Membranpotenzial nach einem Spike. Hängt von re ab (c=−65+15re²).  \nWertebereich: [Min: -65, Typisch: -57.5, Max: -50]  \nEinheit: mV\n\nParameter: d_exc  \nBeschreibung: Anpassung des Erholungsparameters nach einem Spike. Hängt von re ab (d=8−6re²).  \nWertebereich: [Min: 2, Typisch: 5, Max: 8]  \nEinheit: –\n\nParameter: a_inh  \nBeschreibung: Zeitskalierungsparameter für inhibitorische Neuronen. Hängt von ri ab (a=0.02+0.08ri).  \nWertebereich: [Min: 0.02, Typisch: 0.06, Max: 0.1]  \nEinheit: –\n\nParameter: b_inh  \nBeschreibung: Erholungsparameter für inhibitorische Neuronen. Hängt von ri ab (b=0.25−0.05ri).  \nWertebereich: [Min: 0.2, Typisch: 0.225, Max: 0.25]  \nEinheit: –\n\nParameter: c_inh  \nBeschreibung: Reset-Wert für das Membranpotenzial nach einem Spike für inhibitorische Neuronen.  \nWertebereich: [Min: -65, Typisch: -65, Max: -65]  \nEinheit: mV\n\nParameter: d_inh\nBeschreibung: Anpassung des Erholungsparameters nach einem Spike für inhibitorische Neuronen.\nWertebereich: [Min: 0.05, Typisch: 2, Max: 10]\nEinheit: –\n\nParameter: I (synaptischer Eingangsstrom)  \nBeschreibung: Stromstärke, die von Synapsen abhängig ist. Abhängig von Netzwerkkonfiguration und synaptischer Dynamik.  \nWertebereich: [Min: -20, Typisch: 0, Max: 20]  \nEinheit: Variabel\n\nParameter: I_noise_exc  \nBeschreibung: Zufällige Stromeinspeisung für exzitatorische Neuronen (𝐼noise=5⋅randn()).  \nWertebereich: [Min: -15, Typisch: 0, Max: 15]  \nEinheit: Variabel\n\nParameter: I_noise_inh  \nBeschreibung: Zufällige Stromeinspeisung für inhibitorische Neuronen (𝐼noise=2⋅randn()).  \nWertebereich: [Min: -6, Typisch: 0, Max: 6]  \nEinheit: Variabel\n\nParameter: v (Startwert)  \nBeschreibung: Anfangswert für das Membranpotenzial. Entspricht dem Ruhepotenzial der Neuronen.  \nWertebereich: [Min: -65, Typisch: -65, Max: -65]  \nEinheit: mV\n\nParameter: weights_exc  \nBeschreibung: Stärke exzitatorischer Synapsen. Werte stammen aus einer Gleichverteilung (0.5⋅Uniform(0,1)).  \nWertebereich: [Min: 0, Typisch: 0.25, Max: 0.5]  \nEinheit: –\n\nParameter: weights_inh  \nBeschreibung: Stärke inhibitorischer Synapsen. Werte stammen aus einer Gleichverteilung (−Uniform(0,1)).  \nWertebereich: [Min: -1, Typisch: -0.5, Max: 0]  \nEinheit: –\n\n\nBeispieloutput:\ndt: [Zahl im Bereich 0.1–1]  \nNe: [Zahl im Bereich 800–800]  \nNi: [Zahl im Bereich 200–200]  \na_exc: [Zahl im Bereich 0.02–0.02]  \nb_exc: [Zahl im Bereich 0.2–0.2]  \nc_exc: [Zahl im Bereich -65 bis -50]  \nd_exc: [Zahl im Bereich 2–8]  \na_inh: [Zahl im Bereich 0.02–0.1]  \nb_inh: [Zahl im Bereich 0.2–0.25]  \nc_inh: [Zahl im Bereich -65 bis -65]  \nd_inh: [Zahl im Bereich 0.05 bis 10]  \nI: [Zahl im Bereich -20 bis 20]  \nI_noise_exc: [Zahl im Bereich -15 bis 15]  \nI_noise_inh: [Zahl im Bereich -6 bis 6]  \nv: [Zahl im Bereich -65 bis -65]  \nweights_exc: [Zahl im Bereich 0–0.5]  \nweights_inh: [Zahl im Bereich -1 bis 0]"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -1280,
        180
      ],
      "id": "959e8f2e-5580-4097-b0ac-005bd1c2fe09",
      "name": "Izhikevich_2003"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "Szenario"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1520,
        180
      ],
      "id": "d7b33aa5-6165-4929-983c-792169b81577",
      "name": "Workflow Input Trigger"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "text": "=Aufgabe:Analysiere kritisch die Dynamik des simulierten Membranpotentials eines neuronalen Modells im Kontext typischer neuronaler Dynamiken. Nutze dein Verständnis typischer neuronaler Verhaltensweisen als kontextuelle Orientierungshilfe, um die Simulationsergebnisse einzuordnen, beobachtete Dynamiken zu identifizieren und neuronale Mechanismen zu hypothesisieren.\n\nSimulationskontext:Das Bild zeigt eine Gegenüberstellung von Referenz- und Simulationsdaten eines zufälligen Netzwerks von Integrate-and-Fire-Neuronen mit exponentiellen synaptischen Strömen. Die Referenzdaten basieren auf einer Implementierung von Benchmark 2 aus dem Review-Paper \"Simulation of networks of spiking neurons: A review of tools and strategies (2007)\".\n\nSzenario:\n{{ $('Workflow Input Trigger').item.json.Szenario }}\n\nSimulationsparameter:\n{{ $('Izhikevich_2003').item.json.text }}\n\nAnalytische Leitfragen:\n\n1. Dynamik der Simulation (Primärfokus):Beschreibe quantitativ und qualitativ:\n\nRuhepotential: Liegt es im erwarteten Bereich (z. B. ~-70 mV) für Neuronen?\n\nSpike-Amplitude: Maximale Depolarisation, Anstiegs-/Abfallgeschwindigkeit.\n\nFeuerrate: Frequenz der Spikes über die Zeit.\n\nAdaptationsverhalten: Ändert sich die Feuerrate bei anhaltender Stimulation?\n\n2. Mechanistische Hypothesen:Welche neuronalen Mechanismen (Ionenkanäle, synaptische Eigenschaften, Stimulationsparameter) könnten diese beobachteten Dynamiken erklären?\n\nBeispiel: \"Ein schnellerer Spike-Anstieg deutet auf erhöhte Na⁺-Leitfähigkeit hin.\"\n\nBeziehe explizit das Szenario und die Modellparameter ein (z. B. \"Die in den Parametern definierte erhöhte Kaliumleitfähigkeit könnte...\").\n\nAnforderungen:\n\nWissenschaftliche Präzision: Nutze Begriffe wie \"Nachhyperpolarisation\", \"Feuerratenadaptation\", \"intrinsische Erregbarkeit\".\n\nQuantitative Angaben: Messwerte (mV, ms, Hz) für Spike-Amplituden, Frequenzänderungen.\n\nTestbare Hypothesen: Formuliere kausale Vermutungen (z. B. \"Eine Reduktion der Kaliumkanaldichte im Modell könnte die verlängerte Repolarisationsphase erklären.\").\n\nKritik: Hinterfrage, ob beobachtete Dynamiken durch Modelllimitationen oder reale neurobiologische Phänomene begründet sind.\n\nStrukturvorgabe:\n\nBeschreibung der Simulationsdynamik (Primärdaten).\n\nKontextualisierung innerhalb neuronaler Dynamiken (Einordnung in typische neuronale Verhaltensweisen).\n\nMechanistische Hypothesenbildung (Ursachen für Beobachtungen).\n\nZiel:Eine Analyse, die die Simulation selbst in den Mittelpunkt stellt und typische neuronale Verhaltensweisen als Orientierung nutzt, um Erkenntnisse über deren neuronale Dynamik zu vertiefen.",
        "inputType": "base64",
        "options": {
          "maxTokens": 1000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -280,
        180
      ],
      "id": "cc25cc47-f6f3-4978-b78b-6d4c2be2ed4a",
      "name": "OpenAI3",
      "credentials": {
        "openAiApi": {
          "id": "93L9c3FnEnOvHs4I",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "model": "openai/o3-mini-high",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1260,
        400
      ],
      "id": "2c13d236-d292-436b-898c-49ef6ac9e881",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "pG95LwYPd3nZ3zAb",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appw2bTn3Zt80Vgia",
          "mode": "list",
          "cachedResultName": "Pylorisches",
          "cachedResultUrl": "https://airtable.com/appw2bTn3Zt80Vgia"
        },
        "table": {
          "__rl": true,
          "value": "tbl8tlIfo2kUlK8Ck",
          "mode": "list",
          "cachedResultName": "Analyseergebnisse",
          "cachedResultUrl": "https://airtable.com/appw2bTn3Zt80Vgia/tbl8tlIfo2kUlK8Ck"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Simulationsmodell": "Izhikevich_2003",
            "Szenario": "={{ $('Workflow Input Trigger').item.json.Szenario }}",
            "Simulationsparameter": "={{ $('Izhikevich_2003').item.json.text }}",
            "Analyseergebnisse": "={{ $('OpenAI3').item.json.content }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Simulationsmodell",
              "displayName": "Simulationsmodell",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Szenario",
              "displayName": "Szenario",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Simulationsparameter",
              "displayName": "Simulationsparameter",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Analyseergebnisse",
              "displayName": "Analyseergebnisse",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        0,
        0
      ],
      "id": "588d1927-92ea-40ac-854d-36b130bbaa21",
      "name": "Airtable",
      "credentials": {
        "airtableTokenApi": {
          "id": "zt1LZGV2136revL0",
          "name": "RAD Pylorisches"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dd4a689f-cd05-40b2-8167-76a2c0e9b2bc",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        180
      ],
      "id": "a1d75025-66de-49cd-aa2e-af5a21cd555e",
      "name": "Edit Fields"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-24T22:36:59.000Z",
  "versionId": "4fef9578-deee-4e05-9392-d133a2f0403d"
}