{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Cleaning Database",
            "type": "main",
            "index": 0
          },
          {
            "node": "Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hypothesis-Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Sub-Szenarien-Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Research_Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Datenasuwertungs-Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Datenauswertung - Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simulations-Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Airtable": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Cleaning Database": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-13T22:22:51.197Z",
  "id": "7Gj3PBrkWviOQDAZ",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Forscher-Agent-Sys",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1900,
        -2020
      ],
      "id": "3bee7f65-e0c7-4f4c-ad06-a8a282a48b60",
      "name": "When chat message received",
      "webhookId": "7182d6be-4ac8-4e3d-bd13-568b1e6f7f55"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Aufgabe:\nKoordiniere alle Sub-Workflows, analysiere die Nutzerfrage und leite eine geeignete Vorgehensweise ab. Entscheide dynamisch, welche Agenten benötigt werden und passe den Prozess iterativ an, um die beste Antwort zu liefern.\n\nArbeitsweise:\n\nNutzerfrage analysieren: Verstehe die gestellte Frage und identifiziere die relevanten wissenschaftlichen Konzepte und Ziele.\n\nHypothesenbildung: Wenn erforderlich, beauftrage den Hypothesen-Agent zur Formulierung präziser und überprüfbarer Hypothesen.\n\nInformationssammlung: Hole relevante wissenschaftliche Literatur und bestehende Erkenntnisse über den Research-Agent ein, falls nötig.\n\nSzenario-Planung & Simulation:\nSimuliere immer Szenarien und Hypothesen, um tiefgehende Insights zu erlangen, es sei denn, die aktuelle Studienlage beantwortet die Frage bereits abschließend.\nArbeite mit dem Simulations-Agenten zusammen, um die geeigneten Simulationsparameter festzulegen und die Simulationen zu starten.\n\nIterative Anpassung: Wenn neue Erkenntnisse aus Simulationen oder Recherchen auftauchen oder die Datenlage unzureichend ist, passe den Workflow an und starte ggf. neue Simulationen oder Recherchen.\n\nErgebnisanalyse: Beauftrage den Datenauswertungs-Agent, die Ergebnisse aus Simulationen, Literatur und Datensätzen zu integrieren und eine prägnante Analyse zu liefern.\nAntwort generieren: Formuliere eine fundierte, nachvollziehbare und datenbasierte Antwort. Markiere Unsicherheiten und schlage, falls nötig, weitere Schritte zur Klärung vor.\n\nZiel:\nLiefere eine präzise, vollständige und wissenschaftlich fundierte Antwort. Simuliere stets Szenarien und Hypothesen, wenn dies notwendig ist, um tiefgehende Insights zu gewinnen. Nur wenn die Studienlage ausreichend und abschließend ist, werden keine weiteren Simulationen durchgeführt.\n\nNutzerfrage:\n{{ $('When chat message received').item.json.chatInput }}\n\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -860,
        -2000
      ],
      "id": "1fe73973-bc2d-443b-928f-d9e5883aeead",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "name": "Hypothesen_Agent",
        "description": "=Fähigkeiten / Zweck:\nErstellt basierend auf einer Fragestellung oder einem Sachverhalt eine wissenschaftliche Hypothese. Arbeitet mit dem Szenario-Agenten zusammen, um Szenarien zur Hypothesentestung zu generieren.\n\nWann aufrufen?\n\nWenn eine neue Fragestellung in eine testbare Hypothese umgewandelt werden soll.\nWenn der Supervisor-Agent eine Hypothese verfeinern oder anpassen möchte.\nBenötigte Eingaben:\n\nFragestellung/Sachverhalt: Worum geht es?\nKontext (optional): Hintergrundinfos, Forschungsergebnisse, frühere Hypothesen.\nAusgabe / Output:\nEine testbare, spezifische Hypothese (ggf. mehrere Alternativen) zur Untersuchung in Simulationen oder Experimenten.",
        "workflowId": {
          "__rl": true,
          "value": "MOKST1tPSqCNMPhC",
          "mode": "list",
          "cachedResultName": "Hypothesis-Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Fragestellung": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Fragestellung', ``, 'string') }}",
            "Zusätzliche Informationen": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Zus_tzliche_Informationen', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Fragestellung",
              "displayName": "Fragestellung",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Zusätzliche Informationen",
              "displayName": "Zusätzliche Informationen",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -40,
        -1460
      ],
      "id": "052c5fb6-a47a-4896-9300-1e01d5acc8e0",
      "name": "Hypothesis-Agent"
    },
    {
      "parameters": {
        "name": "Sub_Szenarien_Agent",
        "description": "=Fähigkeiten / Zweck:\nEntwickelt experimentelle Szenarien für Fragestellungen/Hypothesen. Wählt passende Simulationssoftware (TVB oder Brian2) und definiert relevante Parameter, Modellkonfigurationen und Messgrößen.\n\nWann aufrufen?\n\nWenn unklar ist, wie eine Hypothese simuliert werden kann.\nZur automatischen Erstellung mehrerer Test-Szenarien (z. B. großskalige TVB-Simulation vs. kleine Brian2-Netzwerksimulation).\nBenötigte Eingaben:\n\nFragestellung/Hypothese: Untersuchungsgegenstand.\nRessourcen (optional): Zeit, Rechenkapazität, bevorzugte Software.\nAusgabe / Output:\n\nSzenariobeschreibung(en): Setup (TVB/Brian2), variable Parameter, erhobene Daten.\nEmpfehlungen zur besten Hypothesentestung.",
        "workflowId": {
          "__rl": true,
          "value": "x4PspBtnuPO0n2Ok",
          "mode": "list",
          "cachedResultName": "Sub-Szenarien-Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Hypothese": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Hypothese', ``, 'string') }}"
          },
          "matchingColumns": [
            "Hypothese"
          ],
          "schema": [
            {
              "id": "Hypothese",
              "displayName": "Hypothese",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -260,
        -1480
      ],
      "id": "ad0673c1-5870-493f-a75b-ec2de5598ba6",
      "name": "Sub-Szenarien-Agent"
    },
    {
      "parameters": {
        "name": "Research_Agent",
        "description": "=Fähigkeiten / Zweck:\nRecherchiert wissenschaftliche Publikationen über APIs, liefert Zusammenfassungen oder Details zu Theorien und Erkenntnissen.\n\nWann aufrufen?\n\nZur wissenschaftlichen Untermauerung einer Forschungsfrage.\nFür State-of-the-Art-Informationen oder Literaturübersichten.\nBenötigte Eingaben:\n\nFragestellung/Thema: Konkrete Frage oder Stichwörter.\nKontext (optional): Bisherige Erkenntnisse oder Literaturquellen zur Verfeinerung der Suche.\nAusgabe / Output:\nZusammenfassung relevanter Forschungsergebnisse.",
        "workflowId": {
          "__rl": true,
          "value": "73LuBQENC2ABsrUz",
          "mode": "list",
          "cachedResultName": "Research_Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Research Thema": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Research_Thema', ``, 'string') }}"
          },
          "matchingColumns": [
            "chatInput"
          ],
          "schema": [
            {
              "id": "Research Thema",
              "displayName": "Research Thema",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -900,
        -1480
      ],
      "id": "116d3316-9fc8-49fe-aef9-3a74b3a92ab4",
      "name": "Research_Agent"
    },
    {
      "parameters": {
        "name": "Datenauswertungs_Agent",
        "description": "=**Sub-Agent: Ganzheitlicher Datenanalyse-Agent**\n\n**Zweck:**  \nAnalysiert Forschungsdaten (User-Fragen, Hypothesen, Szenarien, Research Tasks, Simulationen) und liefert eine kompakte Zusammenfassung der wichtigsten Erkenntnisse. Bewertet die Datenlage und empfiehlt weitere Schritte.\n\n**Wann aufrufen:**  \n- Nach Forschungszyklen oder Simulationen.  \n- Wenn die Datenlage geprüft oder ergänzt werden soll.  \n- Vor der Definition neuer Szenarien oder Hypothesen.\n\n**Erwartete Rückgabe:**  \n- Kern-Insights  \n- Bewertung der Hypothesen (gestützt/widerlegt/unklar)  \n- Identifikation von Datenlücken  \n- Einschätzung der Datenlage (ausreichend: Ja/Nein)  \n- Empfehlungen zu nächsten Schritten",
        "workflowId": {
          "__rl": true,
          "value": "3hPiZqTvz5BOq8r3",
          "mode": "list",
          "cachedResultName": "Datenauswertung"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -700,
        -1480
      ],
      "id": "970dcb30-e76d-4380-965c-65d8ef502ebf",
      "name": "Datenasuwertungs-Agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "skQK8T0RU86IE7Mj",
          "mode": "list",
          "cachedResultName": "Delete_Temporal_Database_Airtable"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -1400,
        -2200
      ],
      "id": "97551e7e-14fa-44ec-abdd-f227ae9bf2e3",
      "name": "Cleaning Database"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appt3sJYWJGLERh8D",
          "mode": "list",
          "cachedResultName": "RAD - Sys - n8n",
          "cachedResultUrl": "https://airtable.com/appt3sJYWJGLERh8D"
        },
        "table": {
          "__rl": true,
          "value": "tblRjL9aImLDWF12R",
          "mode": "list",
          "cachedResultName": "User Question",
          "cachedResultUrl": "https://airtable.com/appt3sJYWJGLERh8D/tblRjL9aImLDWF12R"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "User Question": "={{ $('When chat message received').item.json.chatInput }}"
          },
          "matchingColumns": [
            "User Question"
          ],
          "schema": [
            {
              "id": "User Question",
              "displayName": "User Question",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -1420,
        -1880
      ],
      "id": "30aa1cbd-e1be-45ba-9c2b-cb078daad8a4",
      "name": "Airtable",
      "credentials": {
        "airtableTokenApi": {
          "id": "xWAwTKgY6HGNzEsl",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "kn8kMDgKcPDlYT3a",
          "mode": "list",
          "cachedResultName": "Datenauswertung - Final"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -320,
        -2000
      ],
      "id": "da8b828c-98aa-4667-95b7-3e94ccc3a0a3",
      "name": "Datenauswertung - Final"
    },
    {
      "parameters": {
        "name": "Simulations_Sub_Agent",
        "description": "=Der Simulations-Agent analysiert Szenario-Beschreibungen und übersetzt sie in Simulationsparameter für zwei spezialisierte Sub-Agents:\n\nBrian2: Modelliert neuronale Dynamiken mit Differentialgleichungen.\nThe Virtual Brain: Simuliert großskalige Gehirnaktivitäten und Konnektivität.\nWann aufrufen:\nBei einer wissenschaftlichen Szenario-Beschreibung mit Modellannahmen und dem Bedarf an neuronalen sowie großskaligen Simulationen.\n\nEingaben:\n\nSzenario-Beschreibung mit wissenschaftlichen Parametern.\nFür Brian2: Zeitabhängige Prozesse, neuronale Dynamiken.\nFür The Virtual Brain: Netzwerkstrukturen, funktionelle Konnektivität.\nErwartete Antwort:\n\nSimulationsparameter für Brian2 (Neuronale Dynamik).\nSimulationsparameter für The Virtual Brain (Gehirnnetzwerke).",
        "workflowId": {
          "__rl": true,
          "value": "GSARutTY3DSiIx7r",
          "mode": "list",
          "cachedResultName": "Simulations-Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Szenario": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Szenario', ``, 'string') }}"
          },
          "matchingColumns": [
            "Szenario"
          ],
          "schema": [
            {
              "id": "Szenario",
              "displayName": "Szenario",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -480,
        -1480
      ],
      "id": "18ca0cdd-c764-4821-addb-6359875821c4",
      "name": "Simulations-Agent"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -1060,
        -2000
      ],
      "id": "144546d8-552f-4d52-8f25-107415baacc0",
      "name": "Merge"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1220,
        -1480
      ],
      "id": "9d3d2da4-cbf5-440d-b665-1a1c3d9abad2",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "93L9c3FnEnOvHs4I",
          "name": "OpenAi account 2"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-17T20:12:07.000Z",
  "versionId": "8f246909-3431-4fd8-8fbe-64bb1659f4af"
}