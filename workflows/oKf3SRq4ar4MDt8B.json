{
  "active": false,
  "connections": {
    "Workflow Input Trigger": {
      "main": [
        [
          {
            "node": "Experimentelle Planung",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Experimentelle Planung",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Experimentelle Planung": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simulation_API1": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Airtable",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Simulation_API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-26T14:35:41.030Z",
  "id": "oKf3SRq4ar4MDt8B",
  "meta": {
    "templateId": "VMiAxXa3lCAizGB5f7dVZQSFfg3FtHkdTKvLuupqBls=",
    "templateCredsSetupCompleted": true
  },
  "name": "TVB_Sub_Workflow",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "Simulationsszenario"
            }
          ]
        }
      },
      "id": "c055762a-8fe7-4141-a639-df2372f30060",
      "typeVersion": 1.1,
      "name": "Workflow Input Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        340,
        320
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        1000,
        520
      ],
      "id": "4d14d357-efd4-4cd5-9403-0f48778ed0cb",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "93L9c3FnEnOvHs4I",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Du bist ein Experte für computergestützte Neurowissenschaften und Simulationen mit The Virtual Brain (TVB). Basierend auf dem folgenden Szenario, erstelle eine Metaebene für die Simulation mit TVB, indem du die grundlegenden Eckpunkte definierst. Konzentriere dich auf übergeordnete Parameter und vermeide zu tiefgehende Details. Behandle folgende Aspekte:\n\nStimulus: Gibt es einen externen Stimulus? Falls ja, spezifiziere:\nArt des Stimulus (z. B. periodisch, impulsartig)\nZeitliche Eigenschaften (Dauer, Periode)\nZielregion im Gehirn\n\nAllgemeine Simulationsparameter:\nSimulationsdauer\nZeitliche Auflösung\ngeeignete Integrationsmethode (deterministisch, stochastisch)\nKopplungsstärke\nVerstärkungsfaktor\nZeitkonstante der Dynamik\nRauschpegel\n\nDas Ziel ist es, eine klare, strukturierte Planung der Simulation auf der Metaebene bereitzustellen, um spätere Implementierungen zu erleichtern. Beschränke dich auf die wichtigsten Parameter und liefere eine kurze logische Begründung für die getroffenen Entscheidungen\n\nWichtig: Vermeide Simulationslängen von über 1 Minuten und eine zeitliche Auflösung von unter 0.5ms (dt)!\n-----------------------------------------------------------------\nZu simulierendes Szenario:\n{{ $('Workflow Input Trigger').item.json.Simulationsszenario }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        980,
        320
      ],
      "id": "25641fb5-0834-4503-a2be-03cdcab09241",
      "name": "Experimentelle Planung"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Rolle und Kontext: Du bist ein erfahrener Neurowissenschaftler und analysierst eine Simulation basierend auf The Virtual Brain - Generic2dOszillator. Dein Ziel ist es, praxisrelevante Erkenntnisse aus den Daten zu extrahieren, anstatt das Diagramm zu beschreiben.\n\nSimuliertes Szenario: \n{{ $('Experimentelle Planung').item.json }}\nRelevante Parameter: \n{{ $('Code').item.json }}\n\nAnalyse & Insights \nKernaussagen\n\nWelche biologischen oder physikalischen Prozesse spiegeln sich in den Daten wider?\nWelche zentralen Trends oder signifikanten Änderungen sind sichtbar?\nInterpretation & Relevanz\n\nWas bedeuten die Trends für neuronale Dynamiken oder Modellannahmen?\nGibt es unerwartete Abweichungen? Welche Hypothesen könnten sie erklären?\nHandlungsimplikationen\n\nWelche praktischen oder theoretischen Konsequenzen ergeben sich aus der Analyse?\nWie könnten die Erkenntnisse zur Modellverbesserung oder Experimentplanung beitragen?\nZusätzliche Hinweise:\n\nNutze wissenschaftliche Terminologie mit präzisen quantitativen Aussagen.\nVermeide lange Diagrammbeschreibungen – der Fokus liegt auf der Bedeutung der Daten.\nDie Ausgabe darf maximal 300 Tokens umfassen.",
        "inputType": "base64",
        "options": {
          "detail": "auto",
          "maxTokens": 1000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        3140,
        320
      ],
      "id": "d6153e01-e7ff-48d3-b689-b37bbf734d7f",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "93L9c3FnEnOvHs4I",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.API_URL_TVB}}/simulate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Code').item.json }}",
        "options": {
          "response": {},
          "timeout": "=400000"
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2820,
        320
      ],
      "id": "ea18f6ff-6747-4024-b8a7-08d1476b3284",
      "name": "Simulation_API1"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appt3sJYWJGLERh8D",
          "mode": "list",
          "cachedResultName": "RAD - Sys - n8n",
          "cachedResultUrl": "https://airtable.com/appt3sJYWJGLERh8D"
        },
        "table": {
          "__rl": true,
          "value": "tblINZACOtuJnfslO",
          "mode": "list",
          "cachedResultName": "Simulationsergebnisse-The-Virtual-Brain",
          "cachedResultUrl": "https://airtable.com/appt3sJYWJGLERh8D/tblINZACOtuJnfslO"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Simulationsmodell": "Generic2dOscillator",
            "Szenario": "={{ $('Experimentelle Planung').item.json }}",
            "Simulationsparameter": "={{ $('Code').item.json }}",
            "Simulationsergbnisse": "={{ $('OpenAI').item.json }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Simulationsmodell",
              "displayName": "Simulationsmodell",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Szenario",
              "displayName": "Szenario",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Simulationsparameter",
              "displayName": "Simulationsparameter",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Simulationsergbnisse",
              "displayName": "Simulationsergbnisse",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        3540,
        320
      ],
      "id": "59691f8d-56bd-4e62-8077-4453658cf7e8",
      "name": "Airtable",
      "credentials": {
        "airtableTokenApi": {
          "id": "xWAwTKgY6HGNzEsl",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Du bist ein führender Neurowissenschaftler mit fundierter Expertise in der Arbeit mit Simulationssoftware. Deine Aufgabe besteht darin, präzise Simulationsparameter zu bestimmen, die optimal auf ein vorgegebenes Szenario abgestimmt sind.\n\nDein Ziel:  \nKonfiguriere die Simulation so, dass sie das Szenario möglichst genau widerspiegelt, robuste wissenschaftliche Erkenntnisse liefert und optimal auf relevante Fragestellungen eingeht.\n\nDein Arbeitsansatz:  \n\n1. Analysiere das Szenario sorgfältig, um relevante Variablen, Bedingungen und Zielgrößen zu identifizieren, die durch die Simulation abgebildet werden sollen.  \n2. Bestimme präzise, wie die Simulationsparameter konfiguriert werden müssen, um eine hohe Genauigkeit und Relevanz für das vorgegebene Szenario zu erreichen.  \n3. Führe die Optimierung so aus, dass Ergebnisse eine maximale Übertragbarkeit auf reale oder hypothetische Situationen garantieren.  \n4. Vermeide Parameterkombinationen, die zu numerischer Instabilität führen oder das Modell in unkontrolliertes Wachstum treiben (keine Overflows oder NaN-Werte). Achte insbesondere auf geeignete Werte für dt, coupling_a und stimulus_weigth, damit die Simulation stabil bleibt.  \n5. Dokumentiere ausschließlich die optimierten Simulationsparameter, um einen direkten Einsatz in der Simulation zu ermöglichen.  \n\nWichtige Anforderungen:\n\n- Die Analyse und die Auswahl der Parameter müssen vollständig objektiv, wissenschaftlich fundiert und direkt anwendbar sein.  \n- Der Output ist strikt auf die relevanten Simulationsparameter zu beschränken.  \n- Verzichte auf jegliche Einleitung, Erklärungen oder abschließende Kommentare.  \n\n**Simulationsparameter:**  \n\n**Parameter:** onset  \n**Beschreibung:** Startzeitpunkt des Stimulus  \n**Wertebereich:** [Min: 0, Typisch: 100, Max: 500]  \n**Einheit:** ms  \n\n**Parameter:** T  \n**Beschreibung:** Dauer des Stimulus  \n**Wertebereich:** [Min: 50, Typisch: 500, Max: 2000]  \n**Einheit:** ms  \n\n**Parameter:** tau  \n**Beschreibung:** Zeitkonstante des Stimulus  \n**Wertebereich:** [Min: 10, Typisch: 50, Max: 500]  \n**Einheit:** ms  \n\n**Parameter:** a  \n**Beschreibung:** Parameter des neuronalen Modells  \n**Wertebereich:** [Min: -1.0, Typisch: -0.5, Max: 0.0]  \n**Einheit:** –  \n\n**Parameter:** tau_model  \n**Beschreibung:** Zeitkonstante des neuronalen Modells  \n**Wertebereich:** [Min: 1, Typisch: 10, Max: 100]  \n**Einheit:** ms  \n\n**Parameter:** coupling_a  \n**Beschreibung:** Kopplungsstärke zwischen Gehirnarealen  \n**Wertebereich:** [Min: 0.0, Typisch: 0.1, Max: 1.0]  \n**Einheit:** –  \n\n**Parameter:** dt  \n**Beschreibung:** Zeitschritt der numerischen Integration  \n**Wertebereich:** [Min: 0.1, Typisch: 0.5, Max: 1.0]  \n**Einheit:** ms  \n\n**Parameter:** nsig  \n**Beschreibung:** Rauschstärke  \n**Wertebereich:** [Min: 0.0, Typisch: 0.01, Max: 0.1]  \n**Einheit:** –  \n\n**Parameter:** brain_areas  \n**Beschreibung:** Anzahl und Auswahl der stimulierten Gehirnareale  \n**Wertebereich:** [Min: 1, Typisch: 1–10, Max: 76]  \n**Einheit:** –  \nMögliche Gehirnareale: rA1 (0), rA2 (1), rAMYG (2), rCCA (3), rCCP (4), rCCR (5), rCCS (6), rFEF (7), rG (8), rHC (9), rIA (10), rIP (11), rM1 (12), rPCI (13), rPCIP (14), rPCM (15), rPCS (16), rPFCCL (17), rPFCDL (18), rPFCDM (19), rPFCM (20), rPFCORB (21), rPFCPOL (22), rPFCVL (23), rPHC (24), rPMCDL (25), rPMCM (26), rPMCVL (27), rS1 (28), rS2 (29), rTCC (30), rTCI (31), rTCPOL (32), rTCS (33), rTCV (34), rV1 (35), rV2 (36), rCC (37), lA1 (38), lA2 (39), lAMYG (40), lCCA (41), lCCP (42), lCCR (43), lCCS (44), lFEF (45), lG (46), lHC (47), lIA (48), lIP (49), lM1 (50), lPCI (51), lPCIP (52), lPCM (53), lPCS (54), lPFCCL (55), lPFCDL (56), lPFCDM (57), lPFCM (58), lPFCORB (59), lPFCPOL (60), lPFCVL (61), lPHC (62), lPMCDL (63), lPMCM (64), lPMCVL (65), lS1 (66), lS2 (67), lTCC (68), lTCI (69), lTCPOL (70), lTCS (71), lTCV (72), lV1 (73), lV2 (74), lCC (75)  \n\n**Parameter:** simulation_length  \n**Beschreibung:** Gesamtdauer der Simulation  \n**Wertebereich:** [Min: 1000, Typisch: 10000, Max: 300000]  \n**Einheit:** ms  \n\n**Parameter:** stimulus_weigth  \n**Beschreibung:** Gewichtung des Stimulus  \n**Wertebereich:** [Min: 0.0, Typisch: 1.0, Max: 10.0]  \n**Einheit:** –  \n\n**Beispieloutput:**  \nonset: 100  \nT: 500  \ntau: 50  \na: -0.5  \ntau_model: 10  \ncoupling_a: 0.1  \ndt: 0.2  \nnsig: 0.01  \nbrain_areas: 5  \nsimulation_length: 10000  \nstimulus_weigth: 1.0  \n--------------------------------------------------------------------------------\nDies ist das zu simulierende Szenario:\n{{ $json.text }}\n\nWichtig: keine Kommentare im Output!"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1660,
        320
      ],
      "id": "058713bd-dd1e-445f-8f2d-069b4f7a878c",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "jsCode": "// Original-Response aus dem Input-Node\nconst response = $input.first().json.text;\n\n// Validierung: Sicherstellen, dass response ein String ist\nif (typeof response !== 'string') {\n  throw new Error(\"Response ist nicht definiert oder kein String.\");\n}\n\n// Regex zur Extraktion der neuen Parameter und Werte, mit Zeilenumbruch (\\n) als Trennzeichen\nconst regexParams = /onset:\\s*([-]?\\d+(?:\\.\\d+)?)\\s*\\n|T:\\s*([-]?\\d+(?:\\.\\d+)?)\\s*\\n|tau:\\s*([-]?\\d+(?:\\.\\d+)?)\\s*\\n|a:\\s*([-]?\\d+(?:\\.\\d+)?)\\s*\\n|tau_model:\\s*([-]?\\d+(?:\\.\\d+)?)\\s*\\n|coupling_a:\\s*([-]?\\d+(?:\\.\\d+)?)\\s*\\n|dt:\\s*([-]?\\d+(?:\\.\\d+)?)\\s*\\n|nsig:\\s*([-]?\\d+(?:\\.\\d+)?)\\s*\\n|brain_areas:\\s*([\\d,\\s-]+)\\s*\\n|simulation_length:\\s*([-]?\\d+(?:\\.\\d+)?)\\s*\\n|stimulus_weigth:\\s*([-]?\\d+(?:\\.\\d+)?)\\s*/g;\n\n// Alle Übereinstimmungen für Parameter finden\nconst matchesParams = [...response.matchAll(regexParams)];\n\n// Initialisiere ein Objekt zur Speicherung der Parameter\nconst parameters = {};\n\n// Parameterwerte aus den Matches extrahieren\nmatchesParams.forEach(match => {\n  if (match[1]) parameters.onset = parseFloat(match[1]);\n  if (match[2]) parameters.T = parseFloat(match[2]);\n  if (match[3]) parameters.tau = parseFloat(match[3]);\n  if (match[4]) parameters.a = parseFloat(match[4]);\n  if (match[5]) parameters.tau_model = parseFloat(match[5]);\n  if (match[6]) parameters.coupling_a = parseFloat(match[6]);\n  if (match[7]) parameters.dt = parseFloat(match[7]);\n  if (match[8]) parameters.nsig = parseFloat(match[8]);\n  if (match[9]) {\n    // brain_areas: Falls mehrere Gehirnareale (durch Komma oder Leerzeichen getrennt) angegeben sind\n    parameters.brain_areas = match[9]\n      .split(/[\\s,]+/)\n      .filter(Boolean)\n      .map(val => isNaN(val) ? val : parseInt(val, 10));\n  }\n  if (match[10]) parameters.simulation_length = parseFloat(match[10]);\n  if (match[11]) parameters.stimulus_weigth = parseFloat(match[11]);\n});\n\n// Rückgabe des Parameter-Objekts\nreturn {\n  json: parameters\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2280,
        320
      ],
      "id": "30360ffe-fc95-4a6e-8108-d8c896343e0a",
      "name": "Code"
    },
    {
      "parameters": {
        "model": "={{$env.Simulation_LLM}}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1680,
        540
      ],
      "id": "44d74601-fbdf-43b6-af53-557b62d40c3b",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "pG95LwYPd3nZ3zAb",
          "name": "OpenRouter account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-17T19:33:37.000Z",
  "versionId": "9c3cc741-c78e-41f5-93d6-6d5e1c22730e"
}