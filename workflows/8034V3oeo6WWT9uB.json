{
  "active": false,
  "connections": {
    "Workflow Input Trigger": {
      "main": [
        [
          {
            "node": "STDP (Spike-Timing Dependent Plasticity)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "Simulation_API8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "STDP (Spike-Timing Dependent Plasticity)": {
      "main": [
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simulation_API8": {
      "main": [
        [
          {
            "node": "OpenAI8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "STDP (Spike-Timing Dependent Plasticity)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI8": {
      "main": [
        [
          {
            "node": "Airtable",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-14T17:16:22.018Z",
  "id": "8034V3oeo6WWT9uB",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "STDP (Spike-Timing Dependent Plasticity)",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "b55725e7-566c-400c-b316-1e1675e8e89a",
      "name": "Workflow Input Trigger"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Du bist ein führender Neurowissenschaftler mit fundierter Expertise in der Arbeit mit Simulationssoftware. Deine Aufgabe besteht darin, präzise Simulationsparameter zu bestimmen, die optimal auf ein vorgegebenes Szenario abgestimmt sind.\n\nDein Ziel:\nKonfiguriere die Simulation so, dass sie das Szenario möglichst genau widerspiegelt, robuste wissenschaftliche Erkenntnisse liefert und optimal auf relevante Fragestellungen eingeht.\n\nDein Arbeitsansatz:\n\nAnalysiere das Szenario sorgfältig, um relevante Variablen, Bedingungen und Zielgrößen zu identifizieren, die durch die Simulation abgebildet werden sollen.\nBestimme präzise, wie die Simulationsparameter konfiguriert werden müssen, um eine hohe Genauigkeit und Relevanz für das vorgegebene Szenario zu erreichen.\nFühre die Optimierung so aus, dass Ergebnisse eine maximale Übertragbarkeit auf reale oder hypothetische Situationen garantieren.\nDokumentiere ausschließlich die optimierten Simulationsparameter, um einen direkten Einsatz in der Simulation zu ermöglichen.\nWichtige Anforderungen:\n\nDie Analyse und die Auswahl der Parameter müssen vollständig objektiv, wissenschaftlich fundiert und direkt anwendbar sein.\nDer Output ist strikt auf die relevanten Simulationsparameter zu beschränken.\nVerzichte auf jegliche Einleitung, Erklärungen oder abschließende Kommentare.\n\nSimulationsparameter:\nParameter: N (Anzahl Neuronen)\nBeschreibung: Anzahl der Neuronen im Modell. Bestimmt die Größe des Netzwerks.\nWertebereich: [Min: 10, Typisch: 1000, Max: 10.000]\nEinheit: —\n\nParameter: taum (Membran-Zeitkonstante)\nBeschreibung: Zeitkonstante der Membranspannung, beeinflusst die Trägheit der Neuronenreaktion.\nWertebereich: [Min: 5, Typisch: 10, Max: 50]\nEinheit: ms\n\nParameter: taupre (STDP-Zeitfenster)\nBeschreibung: Zeitkonstante für die präsynaptische STDP-Regel. Beeinflusst die Lernrate für synaptische Potenzierung.\nWertebereich: [Min: 10, Typisch: 20, Max: 50]\nEinheit: ms\n\nParameter: taupost (STDP-Zeitfenster)\nBeschreibung: Zeitkonstante für die postsynaptische STDP-Regel. Bestimmt die Dauer des Einflusses nach einem Spike.\nWertebereich: [Min: 10, Typisch: 20, Max: 50]\nEinheit: ms\n\nParameter: Ee (Exzitatorisches Umkehrpotential)\nBeschreibung: Membranpotential, bei dem exzitatorische Ströme umkehren.\nWertebereich: [Min: 0, Typisch: 0, Max: +10]\nEinheit: mV\n\nParameter: vt (Spike-Schwelle)\nBeschreibung: Membranpotential, ab dem ein Neuron einen Spike erzeugt.\nWertebereich: [Min: -55, Typisch: -54, Max: -50]\nEinheit: mV\n\nParameter: vr (Reset-Potential)\nBeschreibung: Membranpotential, auf das nach einem Spike zurückgesetzt wird.\nWertebereich: [Min: -70, Typisch: -60, Max: -60]\nEinheit: mV\n\nParameter: El (Ruhemembranpotential)\nBeschreibung: Membranpotential eines ruhenden Neurons ohne externe Eingaben.\nWertebereich: [Min: -80, Typisch: -74, Max: -70]\nEinheit: mV\n\nParameter: taue (Exzitatorische synaptische Zeitkonstante)\nBeschreibung: Zeitkonstante für die Integration exzitatorischer synaptischer Ströme.\nWertebereich: [Min: 1, Typisch: 5, Max: 10]\nEinheit: ms\n\nParameter: F (Input-Frequenz)\nBeschreibung: Eingangsfrequenz des neuronalen Stimulus, bestimmt die Anregung des Netzwerks.\nWertebereich: [Min: 1, Typisch: 15, Max: 100]\nEinheit: Hz\n\nParameter: gmax (Maximale synaptische Konduktanz)\nBeschreibung: Obergrenze der synaptischen Leitfähigkeit. Beeinflusst die Stärke der Verbindungen zwischen Neuronen.\nWertebereich: [Min: 0.001, Typisch: 0.01, Max: 0.1]\nEinheit: —\n\nParameter: dApre (STDP Lernrate Potenzierung)\nBeschreibung: Lernrate für die Potenzierung von Synapsen durch STDP.\nWertebereich: [Min: 0.001, Typisch: 0.01, Max: 0.05]\nEinheit: —\n\n\nBeispieloutput:\nN = 1000\ntaum = 10.0\ntaupre = 20.0\ntaupost = 20.0\nEe = 0.0\nvt = -54.0\nvr = -60.0\nEl = -74.0 \ntaue = 5.0\nF = 15.0\ngmax = 0.01\ndApre = 0.01\n--------------------------------------------------------------------------------\nDies ist das zu simulierende Szenario:\n{{ $json.query }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        260,
        0
      ],
      "id": "7cf06856-d93b-40ca-9700-76461e4599a4",
      "name": "STDP (Spike-Timing Dependent Plasticity)"
    },
    {
      "parameters": {
        "jsCode": "// Original-Response aus dem Input-Node\nconst response = $input.first().json.text;\n\n// Validierung: Sicherstellen, dass response ein String ist\nif (typeof response !== 'string') {\n  throw new Error(\"Response ist nicht definiert oder kein String.\");\n}\n\n// Regex zur Extraktion der Parameter und Werte\nconst regexParams = /\\b([a-zA-Z_]+(?:\\s*\\(.*?\\))?):\\s*([\\d.-]+)\\s*(?:\\*\\s*[a-zA-Z_()]+)?/g;\n\n// Alle Übereinstimmungen für Parameter finden\nconst matchesParams = [...response.matchAll(regexParams)];\n\n// Initialisiere ein Objekt zur Speicherung der Parameter\nconst parameters = {};\n\n// Parameterwerte aus Matches extrahieren\nmatchesParams.forEach(match => {\n  // Extrahiere den Parameter-Namen und den Wert\n  const paramName = match[1].trim();\n  const paramValue = parseFloat(match[2]);\n\n  // Speichere die Parameter im Objekt\n  parameters[paramName] = paramValue;\n});\n\n// Rückgabe des Parameters-Objekts\nreturn {\n  json: parameters\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        0
      ],
      "id": "4584cdef-6e40-4456-96c4-60929aa9f676",
      "name": "Code8"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$env.API_URL}}/simulate_stdp",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Code8').item.json }}",
        "options": {
          "response": {}
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        880,
        0
      ],
      "id": "5efed265-6b86-42d7-aae7-d5bbfc3741db",
      "name": "Simulation_API8"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=Rolle und Kontext: Du bist ein erfahrener Neurowissenschaftler und analysierst eine Simulation basierend auf Brian2 – STDP (Spike-Timing Dependent Plasticity). Dein Ziel ist es, praxisrelevante Erkenntnisse aus den Daten zu extrahieren, anstatt das Diagramm zu beschreiben.\n\nSimuliertes Szenario: \n{{ $('Workflow Input Trigger').item.json.query }}\nRelevante Parameter: \n{{ $('STDP (Spike-Timing Dependent Plasticity)').item.json.text }}\n\nAnalyse & Insights (max. 300 Tokens)\nKernaussagen\n\nWelche biologischen oder physikalischen Prozesse spiegeln sich in den Daten wider?\nWelche zentralen Trends oder signifikanten Änderungen sind sichtbar?\nInterpretation & Relevanz\n\nWas bedeuten die Trends für neuronale Dynamiken oder Modellannahmen?\nGibt es unerwartete Abweichungen? Welche Hypothesen könnten sie erklären?\nHandlungsimplikationen\n\nWelche praktischen oder theoretischen Konsequenzen ergeben sich aus der Analyse?\nWie könnten die Erkenntnisse zur Modellverbesserung oder Experimentplanung beitragen?\nZusätzliche Hinweise:\n\nNutze wissenschaftliche Terminologie mit präzisen quantitativen Aussagen.\nVermeide lange Diagrammbeschreibungen – der Fokus liegt auf der Bedeutung der Daten.\nDie Ausgabe darf maximal 300 Tokens umfassen.",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1160,
        0
      ],
      "id": "ba131fe0-d5fc-44a9-9dd9-20fa361bd2f6",
      "name": "OpenAI8",
      "credentials": {
        "openAiApi": {
          "id": "93L9c3FnEnOvHs4I",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "model": "={{$env.Simulation_LLM}}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        280,
        220
      ],
      "id": "9444dcdb-fe04-45f5-9ee0-17fe9f43a85c",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "pG95LwYPd3nZ3zAb",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appt3sJYWJGLERh8D",
          "mode": "list",
          "cachedResultName": "RAD - Sys - n8n",
          "cachedResultUrl": "https://airtable.com/appt3sJYWJGLERh8D"
        },
        "table": {
          "__rl": true,
          "value": "tblD1v9qA3B96bBgp",
          "mode": "list",
          "cachedResultName": "Simulationsergebnisse",
          "cachedResultUrl": "https://airtable.com/appt3sJYWJGLERh8D/tblD1v9qA3B96bBgp"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Simulationsmodell": "STDP (Spike-Timing Dependent Plasticity)",
            "Szenario": "={{ $('Workflow Input Trigger').item.json.query }}",
            "Simulationsparameter": "={{ $('STDP (Spike-Timing Dependent Plasticity)').item.json.text }}",
            "Simulationsergebnisse": "={{ $json.content }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Simulationsmodell",
              "displayName": "Simulationsmodell",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Szenario",
              "displayName": "Szenario",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Simulationsparameter",
              "displayName": "Simulationsparameter",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Simulationsergebnisse",
              "displayName": "Simulationsergebnisse",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1400,
        -180
      ],
      "id": "1ee39b2a-2aa9-4087-8a23-d6eaba1b87d1",
      "name": "Airtable",
      "credentials": {
        "airtableTokenApi": {
          "id": "xWAwTKgY6HGNzEsl",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dd4a689f-cd05-40b2-8167-76a2c0e9b2bc",
              "name": "content",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1720,
        0
      ],
      "id": "87f91fb1-d5e0-4623-9bcc-52769f3b5588",
      "name": "Edit Fields"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-23T14:20:35.000Z",
  "versionId": "07dcf63c-22c4-4fce-95aa-747c49b6e1f8"
}